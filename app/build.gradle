import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    compileSdkVersion 21
    buildToolsVersion "21.1.1"

    // this is needed in order to use Android.mk and Application.mk make files instead of ndk block in gradle build
    // file.
    sourceSets.main.jni.srcDirs = []

    defaultConfig {
        applicationId "info.hearit.pluginsample"
        minSdkVersion 16
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        deubg {
            minifyEnabled false
        }
    }

    /**
     * Install dependencies in local maven repository. This task only have to be executed if those
     * dependencies haven't been installed yet in local repository.
     * */
    task installDependencies{
        def patchfieldDependency = new Tuple(
                'com.noisepages.nettoyeur',  // group ID
                'patchfield',                // artifact ID
                '1.0@aar',                   // version
                'libs/patchfield-1.0.aar'    // file
        );

        def pluginsLibDependency = new Tuple(
                'info.hearit',
                'pluginslib',
                '1.0-SNAPSHOT@aar',
                'libs/pluginslib-1.0-SNAPSHOT.aar'
        );

        def packaging = 'aar'

        [patchfieldDependency, pluginsLibDependency].each {dependency ->
            task("install${dependency.get(1)}", type: Exec, description: "Install ${dependency.get(1)}"){
                executable 'mvn'
                args 'install:install-file', "-Dfile=${dependency.get(3)}", "-DgroupId=${dependency.get(0)}",
                        "-DartifactId=${dependency.get(1)}", "-Dversion=${dependency.get(2)}",
                        "-Dpackaging=$packaging"
            }

            installDependencies.dependsOn("install${dependency.get(1)}")
        }
    }

    /**
     * Generate the native header for a specific Java class.
     * */
    task generateNativeHeaders(type: Exec){
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def androidSdk = properties.getProperty('sdk.dir')
        def nativeHeadersFolder = 'src/main/jni'
        def javaInterface = 'info.hearit.pluginsample.PluginAudioModule'
        def pathSeparator = Os.isFamily(Os.FAMILY_WINDOWS) ? ';' : ':'

        executable 'javah'
        args '-d', nativeHeadersFolder, '-classpath', "$androidSdk/platforms/android-21/android.jar$pathSeparator" +
                "build/intermediates/exploded-aar/info.hearit/pluginslib/1.0-SNAPSHOT/classes.jar$pathSeparator" +
                "build/intermediates/exploded-aar/com.noisepages.nettoyeur/patchfield/1.0/classes.jar$pathSeparator" +
                "build/intermediates/classes/debug", javaInterface
    }

    /**
     * Build native code.
     * */
    task ndkBuild(type: Exec){
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def androidNdk = properties.getProperty('ndk.dir')
        def ndkBuildScript =  Os.isFamily(Os.FAMILY_WINDOWS) ? 'ndk-build.cmd' : 'ndk-build'
        executable "$androidNdk/$ndkBuildScript"
        args '-C', 'src/main/jni'
    }
}

dependencies {
    compile 'com.android.support:appcompat-v7:21.0.0'
    compile "info.hearit:pluginslib:1.0-SNAPSHOT@aar" // HearIT plugins lib that is be used to build plugin
    compile "com.noisepages.nettoyeur:patchfield:1.0@aar" // This project depends on Patchfield (more information in README)
    compile "com.google.guava:guava:18.0"
    compile "com.google.code.gson:gson:2.2.4"
}